% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/point_profile_function.R
\name{point.profile}
\alias{point.profile}
\title{Fit a Single Profile Point}
\usage{
point.profile(no.fit, parms, fit.fn, homedir = getwd(), optim.runs = 5,
  random.borders = 1, con.tol = 0.1, control.optim = list(maxit =
  1000), parscale.pars = TRUE, save.rel.diff = 0, ...)
}
\arguments{
\item{no.fit}{A named vector containing the values of all parameters that are not to be fitted.}

\item{parms}{A named vector containing the values of all parameters.}

\item{fit.fn}{A cost function. Has to take the complete parameter vector as an input (needs to be names \code{parms}) and must return the corresponding negative log-likelihood (-2LL, see Burnham and Anderson 2002).}

\item{homedir}{The directory to which the results should be saved to.}

\item{optim.runs}{The number of times that each model will be fitted by \code{\link{optim}}. Default to 5.}

\item{random.borders}{The ranges from which the random initial parameter conditions for all \code{optim.runs} larger than one are sampled. Can be either given as a vector containing the relative deviations for all parameters or as a matrix containing in its first column the lower and in its second column the upper border values. Parameters are uniformly sampled based on \code{\link{runif}}. Default to 1 (100\% deviation of all parameters). Alternatively, functions such as \code{\link{rnorm}}, \code{\link{rchisq}}, etc. can be used if the additional arguments are passed along as well.}

\item{con.tol}{The absolute convergence tolerance of each fitting run (see Details). Default is set to 0.1.}

\item{control.optim}{Control parameters passed along to \code{optim}. For more details, see \code{\link{optim}}.}

\item{parscale.pars}{Logical. If TRUE (default), the \code{parscale} option will be used when fitting with \code{\link{optim}}. This is helpful, if the parameter values are on different scales.}

\item{save.rel.diff}{A numeric value indicating when to overwrite a pre-existing result. Default to 0, which means that results get overwritten if an improvement is made.}

\item{...}{Other parameters to be passed on to optim.}
}
\value{
Returns the fitted parameter set and the corresponding log-likelihood.
}
\description{
For a fixed value of one of the parameters, \code{point.profile} fits the remaining parameters and stores the results in the folder "Profile-Results/Fits/" to be accessed by \code{\link{create.profile}} later.
}
\examples{
#define cost function
cost_function <- function(parms){
  y <- parms[1] + parms[2]*c(1:3) + parms[3]^2 *c(1:3)
  LL <- sum((y - c(1:3))^2)
}

#create profile values
point.profile(no.fit = c(p1 = 1),
              parms = c(p1 = 1, p2 = 3, p3 = 2),
              fit.fn = cost_function,
              optim.runs = 1)
}
